{
  "*>> <summary": {
    "prefix": "\"*>> <summary\"",
    "body": [
      "\"*>> <summary>${1:XX is a method in the YY class.}\"",
      "\"*>> <para>${2}</para>\"",
      "\"*>> $0\"",
      "\"*>> </summary>\""
    ],
    "description": "null"
  },
  "<exception": {
    "prefix": "\"<exception\"",
    "body": [
      "\"<exception cref=\\\"${1:member}\\\">${2:description}</exception>\"",
      "\"*>> $0\""
    ],
    "description": "null"
  },
  "<param": {
    "prefix": "\"<param>\"",
    "body": [
      "\"<param name=\\\"${1:Int}\\\">${2}</param>\"",
      "\"*>> $0\""
    ],
    "description": "null"
  },
  "<returns>": {
    "prefix": "\"<returns>\"",
    "body": [
      "\"<returns>${1:description}</returns>\"",
      "\"*>> $0\""
    ],
    "description": "null"
  },
  "<value": {
    "prefix": "\"<value>\"",
    "body": [
      "\"value>${1:property-description}</value>\"",
      "\"*>> $0\""
    ],
    "description": "null"
  },
  "ACCEPT": {
    "prefix": "\"ACCEPT\"",
    "body": [
      "\"ACCEPT ${1:variable}\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "ACCEPT FROM": {
    "prefix": "\"ACCEPT\"",
    "body": [
      "\"ACCEPT ${1:variable} ${2|FROM DATE,FROM DAY,FROM DAY-OF-WEEK,TIME|}\"",
      "\"$0\""
    ],
    "description": "\"ACCEPT FROM DATE/DAY/WEEK/TIME\""
  },
  "ADD": {
    "prefix": "\"ADD\"",
    "body": [
      "\"ADD ${1:a} TO ${2:b} GIVING ${3:c}\""
    ],
    "description": "\"Add a to b giving c\""
  },
  "CALL": {
    "prefix": "\"CALL\"",
    "body": [
      "\"CALL \\\"$1\\\" USING\"",
      "\"    BY ${2|VALUE,REFERENCE,CONTENT|} ${3:IDENTIFER}\"",
      "\"    RETURNING ${4:RETURN-CODE}\"",
      "\"END-CALL\"",
      "\"$0\""
    ],
    "description": "\"CALL literal\""
  },
  "CANCEL": {
    "prefix": "\"CANCEL\"",
    "body": [
      "\"CANCEL \\\"$1\\\"\"",
      "\"$0\""
    ],
    "description": "\"CANCEL literal\""
  },
  "COPY": {
    "prefix": "\"COPY\"",
    "body": [
      "\"COPY \\\"${1:SUBPROG.CPY}\\\"\"",
      "\"    REPLACING ==${2:()}== BY ==${3:lnk-}==.\""
    ],
    "description": "\"COPY REPLACING\""
  },
  "DATA DIVISION": {
    "prefix": "[\"DD\",\"DATA DIVISION\"]",
    "body": [
      "\"DATA DIVISION.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "DELIMITED": {
    "prefix": "[\"DELIMITED BY SIZE\",\"DBS\"]",
    "body": [
      "\"DELIMITED BY SIZE\""
    ],
    "description": "\"DELIMITED BY SIZE (string)\""
  },
  "DELIMITED_SPACE": {
    "prefix": "[\"DELIMITED BY SPACE\",\"DS\"]",
    "body": [
      "\"DELIMITED BY SPACE\""
    ],
    "description": "\"DELIMITED BY SPACE (string)\""
  },
  "DISPLAY": {
    "prefix": "\"DISPLAY\"",
    "body": [
      "\"DISPLAY \\\"$0\\\"\""
    ],
    "description": "\"DISPLAY literal\""
  },
  "DIVIDE": {
    "prefix": "[\"DIVIDE\",\"DGR\"]",
    "body": [
      "\"DIVIDE ${1:a} BY ${2:b} GIVING ${3:c} ${4:REMAINDER ${5:d}}\""
    ],
    "description": "\"DIVIDE a BY b GIVING [REMAINDER}\""
  },
  "END PROGRAM": {
    "prefix": "\"END PROGRAM\"",
    "body": [
      "\"END PROGRAM ${1:${TM_FILENAME/(.*)\\\\..+$/$1/}}.\""
    ],
    "description": "\"END PROGRAM prg.\""
  },
  "ENTRY": {
    "prefix": "[\"ENTRY\",\"GB\"]",
    "body": [
      "\"$1-EP SECTON.\"",
      "\"ENTRY \\\"$1\\\".\"",
      "\"    $0\\t\"",
      "\"    GOBACK.\"",
      "\"\""
    ],
    "description": "\"ENTRY statement\""
  },
  "ENVIRONMENT DIVISION": {
    "prefix": "[\"ED\",\"ENVIRONMENT DIVISION\"]",
    "body": [
      "\"ENVIRONMENT DIVISION.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "EVALUATE": {
    "prefix": "\"EVALUATE\"",
    "body": [
      "\"EVALUATE $1\"",
      "\"    WHEN $2\"",
      "\"       $0\"",
      "\"    WHEN OTHER\"",
      "\"       CONTINUE\"",
      "\"END-EVALUATE\"",
      "\"\""
    ],
    "description": "\"EVALUATE\""
  },
  "EXIT PROGRAM": {
    "prefix": "[\"EP\",\"EXIT\"]",
    "body": [
      "\"EXIT PROGRAM RETURNING ${1:item}\""
    ],
    "description": "\"EXIT PROGRAM\""
  },
  "FUNCTION-ABS": {
    "prefix": "[\"FUNCTION ABS\"]",
    "body": [
      "\"FUNCTION ABS(${1:number})$0\""
    ],
    "description": "\"function absolute value of number\""
  },
  "FUNCTION-ACOS": {
    "prefix": "[\"FUNCTION ACOS\"]",
    "body": [
      "\"FUNCTION ACOS(${1:cosine})$0\""
    ],
    "description": "\"function trigonometric arc-cosine, or inverse cosine, of cosine\""
  },
  "FUNCTION-ANNUITY": {
    "prefix": "[\"FUNCTION ANNUITY\"]",
    "body": [
      "\"FUNCTION ANNUITY(${1:interest-rate},${2:number-of-periods})$0\""
    ],
    "description": "\"function annuity\""
  },
  "FUNCTION-ASIN": {
    "prefix": "[\"FUNCTION ASIN\"]",
    "body": [
      "\"FUNCTION ASIN(${1:sine})$0\""
    ],
    "description": "\"function trigonometric arc-sine, or inverse sine, of sine\""
  },
  "FUNCTION-ATAN": {
    "prefix": "[\"FUNCTION ATAN\"]",
    "body": [
      "\"FUNCTION ATAN(${1:tangent})$0\""
    ],
    "description": "\"function trigonometric arc-tangent, or inverse tangent, of tangent\""
  },
  "FUNCTION-BOOLEAN-OF-INTEGER": {
    "prefix": "[\"FUNCTION BOOLEAN-OF-INTEGER\"]",
    "body": [
      "\"FUNCTION BOOLEAN-OF-INTEGER(${1:integer},${2:length})$0\""
    ],
    "description": "\"function boolean item of usage bit representing the binary value of integer; with the given length\""
  },
  "FUNCTION-BYTE-LENGTH": {
    "prefix": "[\"FUNCTION BYTE-LENGTH\"]",
    "body": [
      "\"FUNCTION BYTE-LENGTH(${1:integer})$0\""
    ],
    "description": "\"function byte-length (in bytes) of item\""
  },
  "FUNCTION-CHAR": {
    "prefix": "[\"FUNCTION CHAR\"]",
    "body": [
      "\"FUNCTION CHAR(${1:integer})$0\""
    ],
    "description": "\"function character in the ordinal position specified by integer, from the current alphanumeric collating sequence\""
  },
  "FUNCTION-CHAR-NATIONAL": {
    "prefix": "[\"FUNCTION CHAR-NATIONAL\"]",
    "body": [
      "\"FUNCTION CHAR-NATIONAL(${1:integer})$0\""
    ],
    "description": "\"function character in the ordinal position specified by &lt;integer&gt; from the current national collating sequence\""
  },
  "FUNCTION-COMBINED-DATETIME": {
    "prefix": "[\"FUNCTION COMBINED-DATETIME\"]",
    "body": [
      "\"FUNCTION COMBINED-DATETIME(${1:integer-date},${2:standard-numeric-time})$0\""
    ],
    "description": "\"function combines integer-date and standard-numeric-time into a single numeric item from which both date and time components can be derived\""
  },
  "FUNCTION-CONCATENATE": {
    "prefix": "[\"function concatenate\"]",
    "body": [
      "\"function concatenate(${1:string1},${2:string2})$0\""
    ],
    "description": "\"function concatenates the string1.. string2 into a single string result\""
  },
  "FUNCTION-COS": {
    "prefix": "[\"FUNCTION COS\"]",
    "body": [
      "\"FUNCTION COS(${1:angle})$0\""
    ],
    "description": "\"function trigonometric cosine of angle\""
  },
  "FUNCTION-CURRENCY-SYMBOL": {
    "prefix": "[\"FUNCTION CURRENCY-SYMBOL\"]",
    "body": [
      "\"FUNCTION CURRENCY-SYMBOL()$0\""
    ],
    "description": "\"function currency symbol character currently in effect for the locale under which the program is running\""
  },
  "FUNCTION-CURRENT-DATE": {
    "prefix": "[\"FUNCTION CURRENT-DATE\"]",
    "body": [
      "\"FUNCTION CURRENT-DATE(${1:date-and-time-format})$0\""
    ],
    "description": "\"function current date and time as 21-character value\""
  },
  "FUNCTION-FORMATTED-DATE": {
    "prefix": "[\"FUNCTION FORMATTED-DATE\"]",
    "body": [
      "\"FUNCTION FORMATTED-DATE(${1:date-format},${2:integer-date})$0\""
    ],
    "description": "\"function formatted-date\""
  },
  "FUNCTION-FORMATTED-DATETIME": {
    "prefix": "[\"FUNCTION FORMATTED-DATETIME\"]",
    "body": [
      "\"FUNCTION FORMATTED-DATETIME(${1:date-and-time-format},${2:integer-date},${3:standard-numeric-time},${4:offset_or_system_offset})$0\""
    ],
    "description": "\"function formatted-datetime\""
  },
  "FUNCTION-FRACTION-PART": {
    "prefix": "[\"FUNCTION FRACTION-PART\"]",
    "body": [
      "\"FUNCTION FRACTION-PART(${1:number})$0\""
    ],
    "description": "\"portion of number that occurs to the right of the decimal point\""
  },
  "FUNCTION-HIGHEST-ALGEBRAIC": {
    "prefix": "[\"FUNCTION HIGHEST-ALGEBRAIC\"]",
    "body": [
      "\"FUNCTION HIGHEST-ALGEBRAIC(${1:numeric-identifier})$0\""
    ],
    "description": "\"highest value that could possibly be stored in the specified numeric-identifier\""
  },
  "FUNCTION-INTEGER": {
    "prefix": "[\"FUNCTION INTEGER\"]",
    "body": [
      "\"FUNCTION INTEGER(${1:number})$0\""
    ],
    "description": "\"greatest integer value that is less than or equal to number\""
  },
  "FUNCTION-INTEGER-OF-BOOLEAN": {
    "prefix": "[\"FUNCTION INTEGER-OF-BOOLEAN\"]",
    "body": [
      "\"FUNCTION INTEGER-OF-BOOLEAN(${1:boolean-item})$0\""
    ],
    "description": "\"numeric value of boolean-item\""
  },
  "FUNCTION-INTEGER-OF-DATE": {
    "prefix": "[\"FUNCTION INTEGER-OF-DATE\"]",
    "body": [
      "\"FUNCTION INTEGER-OF-DATE(${1:yyyymmdd})$0\""
    ],
    "description": "\"converts yyyymmdd to an internal integer-date\""
  },
  "FUNCTION-INTEGER-OF-DAY": {
    "prefix": "[\"FUNCTION INTEGER-OF-DAY\"]",
    "body": [
      "\"FUNCTION INTEGER-OF-DAY(${1:yyyymmdd})$0\""
    ],
    "description": "\"converts yyyymmdd to an internal integer-day\""
  },
  "FUNCTION-INTEGER-OF-FORMATTED-DATE": {
    "prefix": "[\"FUNCTION INTEGER-OF-FORMATTED-DATE\"]",
    "body": [
      "\"FUNCTION INTEGER-OF-FORMATTED-DATE(${1:format},${2:date})$0\""
    ],
    "description": "\"converts date in specified format to an internal integer\""
  },
  "FUNCTION-INTEGER-PART": {
    "prefix": "[\"FUNCTION INTEGER-PART\"]",
    "body": [
      "\"FUNCTION INTEGER-PART(${1:number})$0\""
    ],
    "description": "\"portion of number that occurs to the left of the decimal point\""
  },
  "FUNCTION-LENGTH": {
    "prefix": "[\"FUNCTION LENGTH\"]",
    "body": [
      "\"FUNCTION LENGTH(${1:item})$0\""
    ],
    "description": "\"returns the length (in character positions) of the specified item\""
  },
  "FUNCTION-LENGTH-AN": {
    "prefix": "[\"FUNCTION LENGTH-AN\"]",
    "body": [
      "\"FUNCTION LENGTH-AN(${1:item})$0\""
    ],
    "description": "\"returns the length (in bytes) of the specified item;\""
  },
  "FUNCTION-LOCALE-COMPARE": {
    "prefix": "[\"FUNCTION LOCALE-COMPARE\"]",
    "body": [
      "\"FUNCTION LOCALE-COMPARE(${1:argument1},${2:argument2},${3:locale-optional})$0\""
    ],
    "description": "\"character '=' or '<' or '>' indicating the result of comparing argument1 and argument2 using a culturall\""
  },
  "FUNCTION-LOCALE-DATE": {
    "prefix": "[\"FUNCTION LOCALE-DATE\"]",
    "body": [
      "\"FUNCTION LOCALE-DATE(${1:yyyymmdd},${2:locale-optional})$0\""
    ],
    "description": "\"format yyyymmd; according to locale\""
  },
  "FUNCTION-LOCALE-TIME": {
    "prefix": "[\"FUNCTION LOCALE-TIME\"]",
    "body": [
      "\"FUNCTION LOCALE-TIME(${1:yyyymmdd},${2:locale-optional})$0\""
    ],
    "description": "\"format time; according to locale\""
  },
  "FUNCTION-LOCALE-TIME-FROM-SECONDS": {
    "prefix": "[\"FUNCTION LOCALE-TIME-FROM-SECONDS\"]",
    "body": [
      "\"FUNCTION LOCALE-TIME-FROM-SECONDS(${1:integer-time},${2:locale-optional})$0\""
    ],
    "description": "\"format integer-time (internal-format) according to locale\""
  },
  "FUNCTION-LOG": {
    "prefix": "[\"FUNCTION LOG\"]",
    "body": [
      "\"FUNCTION LOG(${1:number})$0\""
    ],
    "description": "\"format base e logarithm of number\""
  },
  "FUNCTION-LOG10": {
    "prefix": "[\"FUNCTION LOG10\"]",
    "body": [
      "\"FUNCTION LOG10(${1:number})$0\""
    ],
    "description": "\"format base 10 logarithm of number\""
  },
  "FUNCTION-LOWERCASE": {
    "prefix": "[\"FUNCTION LOWERCASE\"]",
    "body": [
      "\"FUNCTION LOWERCASE(${1:string})$0\""
    ],
    "description": "\"character string that contains string with any uppercase letters replaced by their corresponding lowercase letters\""
  },
  "FUNCTION-LOWEST-ALGEBRAIC": {
    "prefix": "[\"FUNCTION LOWEST-ALGEBRAIC\"]",
    "body": [
      "\"FUNCTION LOWEST-ALGEBRAIC(${1:numeric-identifier})$0\""
    ],
    "description": "\"lowest value that could possibly be stored in the specified numeric-identifier\""
  },
  "FUNCTION-MAX": {
    "prefix": "[\"FUNCTION MAX\"]",
    "body": [
      "\"FUNCTION MAX(${1:number},${2:...})$0\""
    ],
    "description": "\"Alphanumeric/Index/Integer/National/Numeric maximum value from the specified list of numbers\""
  },
  "FUNCTION-MEAN": {
    "prefix": "[\"FUNCTION MEAN\"]",
    "body": [
      "\"FUNCTION MEAN(${1:number},${2:...})$0\""
    ],
    "description": "\"statistical mean value of the specified list of numbers\""
  },
  "FUNCTION-MEDIAN": {
    "prefix": "[\"FUNCTION MEDIAN\"]",
    "body": [
      "\"FUNCTION MEDIAN(${1:number},${2:...})$0\""
    ],
    "description": "\"statistical median value of the specified list of numbers\""
  },
  "FUNCTION-MIDRANGE": {
    "prefix": "[\"FUNCTION MIDRANGE\"]",
    "body": [
      "\"FUNCTION MIDRANGE(${1:number},${2:...})$0\""
    ],
    "description": "\"statistical midrange value of the specified list of numbers\""
  },
  "FUNCTION-MIN": {
    "prefix": "[\"FUNCTION MIN\"]",
    "body": [
      "\"FUNCTION MIN(${1:number},${2:...})$0\""
    ],
    "description": "\"statistical min value of the specified list of numbers\""
  },
  "FUNCTION-MOD": {
    "prefix": "[\"FUNCTION MOD\"]",
    "body": [
      "\"FUNCTION MOD(${1:value},${2:modulus})$0\""
    ],
    "description": "\"remainder from the division of value by modulus\""
  },
  "FUNCTION-MONETARY-DECIMAL-POINT": {
    "prefix": "[\"FUNCTION MONETARY-DECIMAL-POINT\"]",
    "body": [
      "\"FUNCTION MONETARY-DECIMAL-POINT()$0\""
    ],
    "description": "\"character used to separate the integer portion from the fractional part of a monetary currency value according to the current locale\""
  },
  "FUNCTION-MONETARY-THOUSANDS-SEPARATOR": {
    "prefix": "[\"FUNCTION MONETARY-THOUSANDS-SEPARATOR\"]",
    "body": [
      "\"FUNCTION MONETARY-THOUSANDS-SEPARATOR()$0\""
    ],
    "description": "\"character used to separate the thousands digit groupings in a monetary currency value according to the current locale\""
  },
  "FUNCTION-NATIONAL-OF": {
    "prefix": "[\"FUNCTION NATIONAL-OF\"]",
    "body": [
      "\"FUNCTION NATIONAL-OF(${1:alphanumeric-string},${2:replacement-char})$0\""
    ],
    "description": "\"convert alphanumeric-string to the national coded character set representation\""
  },
  "FUNCTION-NUMERIC-THOUSANDS-SEPARATOR": {
    "prefix": "[\"FUNCTION NUMERIC-THOUSANDS-SEPARATOR\"]",
    "body": [
      "\"FUNCTION NUMERIC-THOUSANDS-SEPARATOR()$0\""
    ],
    "description": "\"character used to separate the thousands digit groupings in a numeric value according to the current locale\""
  },
  "FUNCTION-NUMVAL": {
    "prefix": "[\"FUNCTION NUMVAL\"]",
    "body": [
      "\"FUNCTION NUMVAL(${1:string})$0\""
    ],
    "description": "\"corresponding numeric value for string\""
  },
  "FUNCTION-NUMVAL-C": {
    "prefix": "[\"FUNCTION NUMVAL-C\"]",
    "body": [
      "\"FUNCTION NUMVAL-C(${1:string},${2:currency-symbol}${3:,ANYCASE})$0\""
    ],
    "description": "\"corresponding numeric value for string, case-sensitive if ANYCASE not given\""
  },
  "FUNCTION-NUMVAL-F": {
    "prefix": "[\"FUNCTION NUMVAL-F\"]",
    "body": [
      "\"FUNCTION NUMVAL-F(${1:string})$0\""
    ],
    "description": "\"corresponding numeric value for floating-point-string\""
  },
  "FUNCTION-ORD": {
    "prefix": "[\"FUNCTION ORD\"]",
    "body": [
      "\"FUNCTION ORD(${1:char},${2:...})$0\""
    ],
    "description": "\"ordinal position in the program character set corresponding to char\""
  },
  "FUNCTION-ORD-MAX": {
    "prefix": "[\"FUNCTION ORD-MAX\"]",
    "body": [
      "\"FUNCTION ORD-MAX(${1:char},${2:...})$0\""
    ],
    "description": "\"max. ordinal position in the program character set corresponding to list of chars\""
  },
  "FUNCTION-ORD-MIN": {
    "prefix": "[\"FUNCTION ORD-MIN\"]",
    "body": [
      "\"FUNCTION ORD-MIN(${1:char},${2:...})$0\""
    ],
    "description": "\"min. ordinal position in the program character set corresponding to list of chars\""
  },
  "FUNCTION-PI": {
    "prefix": "[\"PI\",\"FUNCTION PI\"]",
    "body": [
      "\"FUNCTION PI()$0\""
    ],
    "description": "\"pi\""
  },
  "FUNCTION-PRESENT-VALUE": {
    "prefix": "[\"FUNCTION PRESENT-VALUE\"]",
    "body": [
      "\"FUNCTION PRESENT-VALUE(${1:discount-rate},${2:amount},${3:...})$0\""
    ],
    "description": "\"approximation of the present value of a series of future period-end amount\""
  },
  "FUNCTION-RANDOM": {
    "prefix": "[\"FUNCTION RANDOM\"]",
    "body": [
      "\"FUNCTION RANDOM(${1:seed})$0\""
    ],
    "description": "\"pseudo-random number 0> <1 from a rectangular distribution with optional seed\""
  },
  "FUNCTION-RANGE": {
    "prefix": "[\"FUNCTION RANGE\"]",
    "body": [
      "\"FUNCTION RANGE(${1:argument},${2:...})$0\""
    ],
    "description": "\"value of the maximum argument minus the value of the minimum argument\""
  },
  "FUNCTION-REM": {
    "prefix": "[\"FUNCTION REM\"]",
    "body": [
      "\"FUNCTION REM(${1:number},${2:divisor})$0\""
    ],
    "description": "\"remainder of number divided by divisor\""
  },
  "FUNCTION-REVERSE": {
    "prefix": "[\"FUNCTION REVERSE\"]",
    "body": [
      "\"FUNCTION REVERSE(${1:string})$0\""
    ],
    "description": "\"reverse representation with same length of string\""
  },
  "FUNCTION-SECONDS-FROM-FORMATTED-TIME": {
    "prefix": "[\"FUNCTION SECONDS-FROM-FORMATTED-TIME\"]",
    "body": [
      "\"FUNCTION SECONDS-FROM-FORMATTED-TIME(${1:format},${2:time})$0\""
    ],
    "description": "\"decode time according to format (a time format or a combined date and time format)\""
  },
  "FUNCTION-SECONDS-PAST-MIDNIGHT": {
    "prefix": "[\"FUNCTION SECONDS-PAST-MIDNIGHT\"]",
    "body": [
      "\"FUNCTION SECONDS-PAST-MIDNIGHT()$0\""
    ],
    "description": "\"current time of day expressed as the total number of elapsed seconds since midnight\""
  },
  "FUNCTION-SIGN": {
    "prefix": "[\"FUNCTION SIGN\"]",
    "body": [
      "\"FUNCTION SIGN(${1:number})$0\""
    ],
    "description": "\"sign representation of number as -1, 0, 1\""
  },
  "FUNCTION-SIN": {
    "prefix": "[\"FUNCTION SIN\"]",
    "body": [
      "\"FUNCTION SIN(${1:angle})$0\""
    ],
    "description": "\"trigonometric sine of the specified angle\""
  },
  "FUNCTION-SQRT": {
    "prefix": "[\"FUNCTION SQRT\"]",
    "body": [
      "\"FS\"",
      "\"FUNCTION SQRT(${1:number})$0\""
    ],
    "description": "\"aproximation of the square root of number\""
  },
  "FUNCTION-TAN": {
    "prefix": "[\"FUNCTION TAN\"]",
    "body": [
      "\"FT\"",
      "\"FUNCTION TAN(${1:angle})$0\""
    ],
    "description": "\"trigonometric tangent of the specified angle\""
  },
  "FUNCTION-UPPER-CASE": {
    "prefix": "[\"FU\",\"FUNCTION UPPER-CASE\"]",
    "body": [
      "\"FUNCTION UPPER-CASE(${1:string})$0\""
    ],
    "description": "\"character string that contains string with any lowercase letters replaced by their corresponding uppercase letters\""
  },
  "FUNCTION-VARIANCE": {
    "prefix": "[\"FUNCTION VARIANCE\"]",
    "body": [
      "\"FUNCTION VARIANCE(${1:number},${2:...})$0\""
    ],
    "description": "\"statistical variance of the specified list of number argument\""
  },
  "FUNCTION-YEAR-TO-YYYY": {
    "prefix": "[\"FY\",\"FUNCTION YEAR-TO-YYYY\"]",
    "body": [
      "\"FUNCTION YEAR-TO-YYYY(${1:yy},${2:[yy-cutoff, default: 50},${3:yy-execution-time, default: now})$0\""
    ],
    "description": "\"convert yy to yyyy with optional yy-cutoff to delineate centuries\""
  },
  "Function-formatted-time": {
    "prefix": "[\"function formatted-time\"]",
    "body": [
      "\"function formatted-time(${1:time-format},${2:standard-numeric-time},${3:offset_or_system_offset})$0\""
    ],
    "description": "\"function formatted-time\""
  },
  "IDENTIFICATION (CICS)": {
    "prefix": "\"IDENTIFICATION\"",
    "body": [
      "\"        IDENTIFICATION DIVISION. \"",
      "\"        PROGRAM-ID. $1.\"",
      "\"        DATA DIVISION.\"",
      "\"        WORKING-STORAGE SECTION. \"",
      "\"        01 OUT-MSG.\"",
      "\"         02 FILLER PIC X(6) VALUE \\\"Hello \\\". \"",
      "\"         02 MSG    PIC X(20).\"",
      "\"        01 INP-MSG PIC X(20) VALUE \\\"What is your name? \\\".     \"",
      "\"        PROCEDURE DIVISION.\"",
      "\"        PARA1.\"",
      "\"            EXEC CICS\"",
      "\"                 SEND FROM(INP-MSG)\"",
      "\"                 ERASE\"",
      "\"            END-EXEC\"",
      "\"\"",
      "\"            EXEC CICS\"",
      "\"                 RECEIVE INTO (MSG)\"",
      "\"            END-EXEC\"",
      "\"\"",
      "\"       *\"",
      "\"            EXEC CICS\"",
      "\"                 SEND FROM (OUT-MSG)\"",
      "\"                 ERASE\"",
      "\"            END-EXEC\"",
      "\"\"",
      "\"            EXEC CICS\"",
      "\"                 RETURN\"",
      "\"            END-EXEC.\"",
      "\"\"",
      "\"       *\"",
      "\"        END PROGRAM $1.\"",
      "\"\""
    ],
    "description": "\"Template for program (CICS)\""
  },
  "IDENTIFICATION DIVISION": {
    "prefix": "[\"ID\",\"IDENTIFICATION DIVISION\"]",
    "body": [
      "\"IDENTIFICATION DIVISION.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "IF": {
    "prefix": "[\"IF\",\"ie\"]",
    "body": [
      "\"IF ${1:CONDITION}\"",
      "\"   $0\"",
      "\"END-IF\""
    ],
    "description": "null"
  },
  "IF ELSE": {
    "prefix": "[\"IF\",\"IEE\"]",
    "body": [
      "\"IF ${1:CONDITION}\"",
      "\"   $0\"",
      "\"ELSE\"",
      "\"   \"",
      "\"END-IF\""
    ],
    "description": "null"
  },
  "INSPECT CONVERTING": {
    "prefix": "\"INSPECT\"",
    "body": [
      "\"INSPECT $1 CONVERTING '${2:ABCDEFGHIJKLMNOPQRSTUVWXYZ}' to '${3:abcdefghijklmnopqrstuvwxyz}'\""
    ],
    "description": "\"INSPECT CONVERTING\""
  },
  "INSPECT REPLACING": {
    "prefix": "\"INSPECT\"",
    "body": [
      "\"INSPECT $1 REPLACING ALL ${2|SPACES,ZERO|} BY '${3}'\""
    ],
    "description": "\"INSPECT REPLACING\""
  },
  "INSPECT TALLYING": {
    "prefix": "\"INSPECT\"",
    "body": [
      "\"MOVE 0 to ${2:COUNTER}\"",
      "\"INSPECT ${1:SOURCE} TALLYING ${2:COUNTER} FOR ${3|ALL SPACES,ALL $4,CHARACTERS|}\""
    ],
    "description": "\"Inspect a tallying counter for ...\""
  },
  "LINKAGE SECTION ": {
    "prefix": "[\"LS\",\"LKS\",\"LINKAGE SECTION\"]",
    "body": [
      "\"LINKAGE SECTION.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "MFUnit Test": {
    "prefix": "\"mfu,program-id\"",
    "body": [
      "\"       program-id. MFUT_${1:${TM_FILENAME_BASE/MFUT[_](.*)/$1/}}.\"",
      "\"       working-storage section.\"",
      "\"       copy \\\"mfunit.cpy\\\".\"",
      "\"\"",
      "\"       01 test-fail-count     binary-long value 0.\"",
      "\"\"",
      "\"       *> Testcase     : $1\"",
      "\"       *>  Description : $2\"",
      "\"       procedure division.\"",
      "\"           $0\"",
      "\"           if 1 not equal 1\"",
      "\"               display \\\"Odd... 1 not equal 1?\\\"\"",
      "\"               add 1 to test-fail-count\"",
      "\"           end-if\"",
      "\"\"",
      "\"           if test-fail-count not equal 0\"",
      "\"               call \\\"MFU_ASSERT_FAIL_Z\\\" using\"",
      "\"                    by reference z\\\"$1 has failed\\\"\"",
      "\"               end-call\"",
      "\"           end-if\"",
      "\"\"",
      "\"           goback returning test-fail-count.\"",
      "\"\"",
      "\"       *> Startup for testcase $1\"",
      "\"       entry \\\"MFUS_$1\\\".\"",
      "\"           *> Open any files\"",
      "\"           goback.\"",
      "\"\"",
      "\"       *> Teardown for testcase $1\"",
      "\"       entry \\\"MFUE_$1\\\".\"",
      "\"           *> Close any files/delete any temp files\"",
      "\"           goback.\"",
      "\"\"",
      "\"       *> Metadata for testcase $1\"",
      "\"       entry \\\"MFUM_$1\\\".\"",
      "\"           move \\\"$2\\\" to MFU-MD-TESTCASE-DESCRIPTION\"",
      "\"           goback.\"",
      "\"       end program.\""
    ],
    "description": "\"MFUNIT skelton program\""
  },
  "MULTIPLY": {
    "prefix": "[\"MULTIPLY\",\"MG\"]",
    "body": [
      "\"MULTIPLY ${1:a} BY ${2:b} GIVING ${3:c}\""
    ],
    "description": "\"MULTIPLY a BY y GIVING z\""
  },
  "Minimum Line Sequential": {
    "prefix": "\"identification\"",
    "body": [
      "\"       identification division.\"",
      "\"       program-id. ${1:${TM_FILENAME/(.*)\\\\..+$/$1/}}.\"",
      "\"\"",
      "\"       environment division.\"",
      "\"       input-output section.\"",
      "\"        file-control.\"",
      "\"        select ${2:cust} assign to '${4:$2}.txt'\"",
      "\"        organization is line sequential.            \"",
      "\"\"",
      "\"       data division.\"",
      "\"       file section.\"",
      "\"       fd $2.\"",
      "\"       01 ${3:$2-file}.\"",
      "\"        03 ${5:customer-id}    pic 9(5).\"",
      "\"        03 ${6:customer-info}  pic x(65).\"",
      "\"\"",
      "\"       working-storage section.\"",
      "\"       01 ws-eof       pic a. \"",
      "\"\"",
      "\"       procedure division.\"",
      "\"          open input $2.\"",
      "\"             perform until ws-eof='Y'\"",
      "\"                read $2\"",
      "\"                   at end\"",
      "\"                      move 'Y' to ws-eof\"",
      "\"                   not at end\"",
      "\"                      display ${5} \\\" => \\\" ${6}\"",
      "\"                end-read\"",
      "\"             end-perform\"",
      "\"          close $2.\"",
      "\"          $0\"",
      "\"          goback.\"",
      "\"\"",
      "\"       end program $1.\"",
      "\"\""
    ],
    "description": "\"Minimum template File/Seq\""
  },
  "Minimum mainframe program [uppercase]": {
    "prefix": "\"IDENTIFICATION\"",
    "body": [
      "\"       IDENTIFICATION DIVISION.\"",
      "\"       PROGRAM-ID. ${1:${1:${TM_FILENAME/(.*)\\\\..+$/$1/}}}.\"",
      "\"       AUTHOR. $2.\"",
      "\"       INSTALLATION.  ${3:where}.\"",
      "\"       DATE-WRITTEN.  ${4:$CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR}.\"",
      "\"       DATE-COMPILED. ${5:$4}.\"",
      "\"       SECURITY.\"",
      "\"       ENVIRONMENT DIVISION.\"",
      "\"       CONFIGURATION SECTION.\"",
      "\"       SOURCE-COMPUTER. ${6:pc}.\"",
      "\"       OBJECT-COMPUTER. ${7:${6}}.\"",
      "\"       SPECIAL-NAMES.\"",
      "\"       INPUT-OUTPUT SECTION.\"",
      "\"       FILE-CONTROL.\"",
      "\"       DATA DIVISION.\"",
      "\"        FILE SECTION.\"",
      "\"        WORKING-STORAGE SECTION.\"",
      "\"        LINKAGE SECTION.\"",
      "\"       PROCEDURE DIVISION.\"",
      "\"        DECLARATIVES.\"",
      "\"        END DECLARATIVES.\"",
      "\"        main-processing SECTION.\"",
      "\"         mainline-paragraph.\"",
      "\"             $0\"",
      "\"             STOP RUN.\""
    ],
    "description": "\"Template for mainframe\""
  },
  "Minimum program": {
    "prefix": "\"program-id\"",
    "body": [
      "\"       program-id. ${1:${TM_FILENAME/(.*)\\\\..+$/$1/}}.\"",
      "\"       procedure division.\"",
      "\"           $0\"",
      "\"           goback.\"",
      "\"\"",
      "\"       end program $1.\"",
      "\"\""
    ],
    "description": "\"Minimum template\""
  },
  "PERFORM": {
    "prefix": "[\"PERFORM\",\"PE\"]",
    "body": [
      "\"PERFORM ${1:paragraph-name} ${2:value-1} TIMES\""
    ],
    "description": "\"PERFORM paragraph x TIMES\""
  },
  "PERFORM VARYING": {
    "prefix": "[\"PERFORM\",\"PV\"]",
    "body": [
      "\"PERFORM ${1:paragraph-name} VARYING ${2:field-1}\"",
      "\" FROM ${3:value-1} BY ${4:value-2}\"",
      "\" UNTIL ${5:condition}\"",
      "\"$0\""
    ],
    "description": "\"INLINE PERFORM VARYING\""
  },
  "PERFORM-END-PERFORM": {
    "prefix": "[\"PERFORM\",\"PE\"]",
    "body": [
      "\"PERFORM ${1}\"",
      "\"\\t${2}\"",
      "\"END-PERFORM\"",
      "\"${0}\""
    ],
    "description": "\"PERFORM .. END-PERFORM\""
  },
  "PROCEDURE DIVISION": {
    "prefix": "[\"PD\",\"PROCEDURE DIVISION\"]",
    "body": [
      "\"PROCEDURE DIVISION.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "PROGRAM-ID": {
    "prefix": "[\"PI\",\"PROGRAM-ID. PRG.\"]",
    "body": [
      "\"PROGRAM-ID. ${1:${TM_FILENAME/(.*)\\\\..+$/${1:/upcase}/}}.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "STRING": {
    "prefix": "\"STRING\"",
    "body": [
      "\"STRING ${1:item1} DELIMITED BY SIZE\"",
      "\"       ${2:item2} DELIMITED BY SIZE\"",
      "\"       INTO ${3:result}\"",
      "\"END-STRING\"",
      "\"$0\""
    ],
    "description": "\"string delimited by size\""
  },
  "SUBTRACT": {
    "prefix": "\"SUBTRACT\"",
    "body": [
      "\"SUBTRACT ${1:a} FROM ${2:b} GIVING ${3:c}\""
    ],
    "description": "\"SUBTRACT a FROM b GIVING c\""
  },
  "Skelton program": {
    "prefix": "\"program-id\"",
    "body": [
      "\"       program-id. ${1:${TM_FILENAME/(.*)\\\\..+$/$1/}}.\"",
      "\"\"",
      "\"       environment division.\"",
      "\"       configuration section.\"",
      "\"\"",
      "\"       data division.\"",
      "\"       working-storage section.\"",
      "\"\"",
      "\"       procedure division.\"",
      "\"           $0\"",
      "\"           goback.\"",
      "\"\"",
      "\"       end program $1.\"",
      "\"\""
    ],
    "description": "\"Small template for program\""
  },
  "WORKING-STORAGE SECTION": {
    "prefix": "[\"WS\",\"WORKING-STORAGE\"]",
    "body": [
      "\"WORKING-STORAGE SECTION.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "accept": {
    "prefix": "\"accept\"",
    "body": [
      "\"accept ${1:variable}\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "accept from": {
    "prefix": "\"accept\"",
    "body": [
      "\"accept ${1:variable} ${2|from date,from day,from day-of-week,time|}\"",
      "\"$0\""
    ],
    "description": "\"accept from date/day/week/time\""
  },
  "add": {
    "prefix": "\"add\"",
    "body": [
      "\"add ${1:a} to ${2:b} giving ${3:c}\""
    ],
    "description": "\"Add a to b giving c\""
  },
  "call": {
    "prefix": "\"call\"",
    "body": [
      "\"call \\\"$1\\\" using\"",
      "\"    by ${2|value,reference,content|} ${3:identifer}\"",
      "\"    returning ${4:return-code}\"",
      "\"end-call\"",
      "\"$0\""
    ],
    "description": "\"CALL literal\""
  },
  "cancel": {
    "prefix": "\"cancel\"",
    "body": [
      "\"cancel \\\"$1\\\"\"",
      "\"$0\""
    ],
    "description": "\"CANCEL literal\""
  },
  "class-id": {
    "prefix": "\"class-id\"",
    "body": [
      "\"       class-id $1 ${3|public,private|}.\"",
      "\"\"",
      "\"       method-id new public.\"",
      "\"       procedure division.\"",
      "\"           $0\"",
      "\"           exit method.\"",
      "\"       end method.\"",
      "\"\"",
      "\"       end class.\""
    ],
    "description": "\"class with ctor\""
  },
  "copy": {
    "prefix": "\"copy\"",
    "body": [
      "\"copy \\\"${1:subprog.cpy}\\\"\"",
      "\"    replacing ==${2:()}== by ==${3:lnk-}==.\""
    ],
    "description": "\"Copy replacing\""
  },
  "data division": {
    "prefix": "[\"dd\",\"data division\"]",
    "body": [
      "\"data division.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "delimited": {
    "prefix": "[\"delimited by size\",\"dbs\"]",
    "body": [
      "\"delimited by size\""
    ],
    "description": "\"delimited by size (string)\""
  },
  "delimited_space": {
    "prefix": "[\"delimited by space\",\"ds\"]",
    "body": [
      "\"delimited by space\""
    ],
    "description": "\"delimited by size (string)\""
  },
  "dialect": {
    "prefix": "\"$set\"",
    "body": [
      "\"\\\\$set dialect\\\"${2|ans85,bs2000,bs2000-offload,cob370,cob371,cob372,mf,mvs,os390,osvs,vsc21,vsc22,vsc23,vsc24|}\\\"\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "display": {
    "prefix": "\"display\"",
    "body": [
      "\"display \\\"$0\\\"\""
    ],
    "description": "\"display literal\""
  },
  "divide": {
    "prefix": "[\"divide\",\"dgr\"]",
    "body": [
      "\"divide ${1:a} by ${2:b} giving ${3:c} ${4:remainder ${5:d}}\""
    ],
    "description": "\"divide a by b giving [remainder}\""
  },
  "end program": {
    "prefix": "\"end program\"",
    "body": [
      "\"end program ${1:${TM_FILENAME/(.*)\\\\..+$/$1/}}.\""
    ],
    "description": "\"end program ${1:${TM_FILENAME/(.*)\\\\..+$/$1/}}.\""
  },
  "entry": {
    "prefix": "[\"entry\",\"eg\"]",
    "body": [
      "\"$1-ep section.\"",
      "\"entry \\\"$1\\\".\"",
      "\"    $0\\t\"",
      "\"    goback.\"",
      "\"\""
    ],
    "description": "\"entry statement\""
  },
  "enum-id": {
    "prefix": "[\"enum-id\",\"ei\"]",
    "body": [
      "\"*>> <summary>enum-id $1</summary>\"",
      "\"enum-id. $1 as \\\"Status\\\".\"",
      "\"    78 ${2:Item}  value ${3:1}.\"",
      "\"end enum $1.\"",
      "\"\""
    ],
    "description": "\"enum-id\""
  },
  "environment division": {
    "prefix": "[\"ed\",\"environment division\"]",
    "body": [
      "\"environment division.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "evaluate": {
    "prefix": "[\"evaluate\",\"ee\"]",
    "body": [
      "\"evaluate $1\"",
      "\"    when $2\"",
      "\"       $0\"",
      "\"    when other\"",
      "\"       continue\"",
      "\"end-evaluate\"",
      "\"\""
    ],
    "description": "\"evaluate\""
  },
  "exec-sql": {
    "prefix": "\"exec\"",
    "body": [
      "\"exec sql include sqlca end-exec.\""
    ],
    "description": "\"exec sql include\""
  },
  "exec-sql-begin": {
    "prefix": "\"exec\"",
    "body": [
      "\"exec sql begin declare section end-exec.\"",
      "\"$0\"",
      "\"exec sql end declare section end-exec.\""
    ],
    "description": "\"exec sql declare\""
  },
  "exit program": {
    "prefix": "[\"ep\",\"exit\"]",
    "body": [
      "\"exit program returning ${1:item}\""
    ],
    "description": "\"EXIT PROGRAM\""
  },
  "function-abs": {
    "prefix": "[\"function abs\"]",
    "body": [
      "\"function abs(${1:number})$0\""
    ],
    "description": "\"function absolute value of number\""
  },
  "function-acos": {
    "prefix": "[\"function acos\"]",
    "body": [
      "\"function acos(${1:cosine})$0\""
    ],
    "description": "\"function trigonometric arc-cosine, or inverse cosine, of cosine\""
  },
  "function-annuity": {
    "prefix": "[\"function annuity\"]",
    "body": [
      "\"function annuity(${1:interest-rate},${2:number-of-periods})$0\""
    ],
    "description": "\"function annuity\""
  },
  "function-asin": {
    "prefix": "[\"function asin\"]",
    "body": [
      "\"function asin(${1:sine})$0\""
    ],
    "description": "\"function trigonometric arc-sine, or inverse sine, of sine\""
  },
  "function-atan": {
    "prefix": "[\"function atan\"]",
    "body": [
      "\"function atan(${1:tangent})$0\""
    ],
    "description": "\"function trigonometric arc-tangent, or inverse tangent, of tangent\""
  },
  "function-boolean-of-integer": {
    "prefix": "[\"function boolean-of-integer\"]",
    "body": [
      "\"function boolean-of-integer(${1:integer},${2:length})$0\""
    ],
    "description": "\"function boolean item of usage bit representing the binary value of integer; with the given length\""
  },
  "function-byte-length": {
    "prefix": "[\"function byte-length\"]",
    "body": [
      "\"function byte-length(${1:integer})$0\""
    ],
    "description": "\"function byte-length (in bytes) of item\""
  },
  "function-char": {
    "prefix": "[\"function char\"]",
    "body": [
      "\"function char(${1:integer})$0\""
    ],
    "description": "\"function character in the ordinal position specified by integer, from the current alphanumeric collating sequence\""
  },
  "function-char-national": {
    "prefix": "[\"function char-national\"]",
    "body": [
      "\"function char-national(${1:integer})$0\""
    ],
    "description": "\"function character in the ordinal position specified by &lt;integer&gt; from the current national collating sequence\""
  },
  "function-combined-datetime": {
    "prefix": "[\"function combined-datetime\"]",
    "body": [
      "\"function combined-datetime(${1:integer-date},${2:standard-numeric-time})$0\""
    ],
    "description": "\"function combines integer-date and standard-numeric-time into a single numeric item from which both date and time components can be derived\""
  },
  "function-concatenate": {
    "prefix": "[\"function concatenate\"]",
    "body": [
      "\"function concatenate(${1:string1},${2:string2})$0\""
    ],
    "description": "\"function concatenates the string1.. string2 into a single string result\""
  },
  "function-cos": {
    "prefix": "[\"function cos\"]",
    "body": [
      "\"function cos(${1:angle})$0\""
    ],
    "description": "\"function trigonometric cosine of angle\""
  },
  "function-currency-symbol": {
    "prefix": "[\"function currency-symbol\"]",
    "body": [
      "\"function currency-symbol()$0\""
    ],
    "description": "\"function currency symbol character currently in effect for the locale under which the program is running\""
  },
  "function-current-date": {
    "prefix": "[\"function current-date\"]",
    "body": [
      "\"function current-date(${1:date-and-time-format})$0\""
    ],
    "description": "\"function current date and time as 21-character value\""
  },
  "function-formatted-date": {
    "prefix": "[\"function formatted-date\"]",
    "body": [
      "\"function formatted-date(${1:date-format},${2:integer-date})$0\""
    ],
    "description": "\"function formatted-date\""
  },
  "function-formatted-datetime": {
    "prefix": "[\"function formatted-datetime\"]",
    "body": [
      "\"function formatted-datetime(${1:date-and-time-format},${2:integer-date},${3:standard-numeric-time},${4:offset_or_system_offset})$0\""
    ],
    "description": "\"function formatted-datetime\""
  },
  "function-formatted-time": {
    "prefix": "[\"function formatted-time\"]",
    "body": [
      "\"function formatted-time(${1:time-format},${2:standard-numeric-time},${3:offset_or_system_offset})$0\""
    ],
    "description": "\"function formatted-time\""
  },
  "function-fraction-part": {
    "prefix": "[\"function fraction-part\"]",
    "body": [
      "\"function fraction-part(${1:number})$0\""
    ],
    "description": "\"portion of number that occurs to the right of the decimal point\""
  },
  "function-highest-algebraic": {
    "prefix": "[\"function highest-algebraic\"]",
    "body": [
      "\"function highest-algebraic(${1:numeric-identifier})$0\""
    ],
    "description": "\"highest value that could possibly be stored in the specified numeric-identifier\""
  },
  "function-integer": {
    "prefix": "[\"function integer\"]",
    "body": [
      "\"function integer(${1:number})$0\""
    ],
    "description": "\"greatest integer value that is less than or equal to number\""
  },
  "function-integer-of-boolean": {
    "prefix": "[\"function integer-of-boolean\"]",
    "body": [
      "\"dunction integer-of-boolean(${1:boolean-item})$0\""
    ],
    "description": "\"numeric value of boolean-item\""
  },
  "function-integer-of-date": {
    "prefix": "[\"function integer-of-date\"]",
    "body": [
      "\"function integer-of-date(${1:yyyymmdd})$0\""
    ],
    "description": "\"converts yyyymmdd to an internal integer-date\""
  },
  "function-integer-of-day": {
    "prefix": "[\"function integer-of-day\"]",
    "body": [
      "\"function integer-of-day(${1:yyyymmdd})$0\""
    ],
    "description": "\"converts yyyymmdd to an internal integer-day\""
  },
  "function-integer-of-formatted-date": {
    "prefix": "[\"function integer-of-formatted-date\"]",
    "body": [
      "\"function integer-of-formatted-date(${1:format},${2:date})$0\""
    ],
    "description": "\"converts date in specified format to an internal integer\""
  },
  "function-integer-part": {
    "prefix": "[\"function integer-part\"]",
    "body": [
      "\"function integer-part(${1:number})$0\""
    ],
    "description": "\"portion of number that occurs to the left of the decimal point\""
  },
  "function-length": {
    "prefix": "[\"function length\"]",
    "body": [
      "\"function length(${1:item})$0\""
    ],
    "description": "\"returns the length (in character positions) of the specified item\""
  },
  "function-length-an": {
    "prefix": "[\"function length-an\"]",
    "body": [
      "\"function length-an(${1:item})$0\""
    ],
    "description": "\"returns the length (in bytes) of the specified item;\""
  },
  "function-locale-compare": {
    "prefix": "[\"function locale-compare\"]",
    "body": [
      "\"function locale-compare(${1:argument1},${2:argument2},${3:locale-optional})$0\""
    ],
    "description": "\"character '=' or '<' or '>' indicating the result of comparing argument1 and argument2 using a culturall\""
  },
  "function-locale-date": {
    "prefix": "[\"function locale-date\"]",
    "body": [
      "\"function locale-date(${1:yyyymmdd},${2:locale-optional})$0\""
    ],
    "description": "\"format yyyymmd; according to locale\""
  },
  "function-locale-time": {
    "prefix": "[\"function locale-time\"]",
    "body": [
      "\"function locale-time(${1:yyyymmdd},${2:locale-optional})$0\""
    ],
    "description": "\"format time; according to locale\""
  },
  "function-locale-time-from-seconds": {
    "prefix": "[\"function locale-time-from-seconds\"]",
    "body": [
      "\"function locale-time-from-seconds(${1:integer-time},${2:locale-optional})$0\""
    ],
    "description": "\"format integer-time (internal-format) according to locale\""
  },
  "function-log": {
    "prefix": "[\"function log\"]",
    "body": [
      "\"function log(${1:number})$0\""
    ],
    "description": "\"format base e logarithm of number\""
  },
  "function-log10": {
    "prefix": "[\"function log10\"]",
    "body": [
      "\"function log10(${1:number})$0\""
    ],
    "description": "\"format base 10 logarithm of number\""
  },
  "function-lowercase": {
    "prefix": "[\"function lowercase\"]",
    "body": [
      "\"function lowercase(${1:string})$0\""
    ],
    "description": "\"character string that contains string with any uppercase letters replaced by their corresponding lowercase letters\""
  },
  "function-lowest-algebraic": {
    "prefix": "[\"function lowest-algebraic\"]",
    "body": [
      "\"function lowest-algebraic(${1:numeric-identifier})$0\""
    ],
    "description": "\"lowest value that could possibly be stored in the specified numeric-identifier\""
  },
  "function-max": {
    "prefix": "[\"function max\"]",
    "body": [
      "\"function max(${1:number},${2:...})$0\""
    ],
    "description": "\"Alphanumeric/Index/Integer/National/Numeric maximum value from the specified list of numbers\""
  },
  "function-mean": {
    "prefix": "[\"function mean\"]",
    "body": [
      "\"function mean(${1:number},${2:...})$0\""
    ],
    "description": "\"statistical mean value of the specified list of numbers\""
  },
  "function-median": {
    "prefix": "[\"function median\"]",
    "body": [
      "\"function median(${1:number},${2:...})$0\""
    ],
    "description": "\"statistical median value of the specified list of numbers\""
  },
  "function-midrange": {
    "prefix": "[\"function midrange\"]",
    "body": [
      "\"function midrange(${1:number},${2:...})$0\""
    ],
    "description": "\"statistical midrange value of the specified list of numbers\""
  },
  "function-min": {
    "prefix": "[\"function min\"]",
    "body": [
      "\"function min(${1:number},${2:...})$0\""
    ],
    "description": "\"statistical min value of the specified list of numbers\""
  },
  "function-mod": {
    "prefix": "[\"function mod\"]",
    "body": [
      "\"function mod(${1:value},${2:modulus})$0\""
    ],
    "description": "\"remainder from the division of value by modulus\""
  },
  "function-monetary-decimal-point": {
    "prefix": "[\"function monetary-decimal-point\"]",
    "body": [
      "\"function monetary-decimal-point()$0\""
    ],
    "description": "\"character used to separate the integer portion from the fractional part of a monetary currency value according to the current locale\""
  },
  "function-monetary-thousands-separator": {
    "prefix": "[\"function monetary-thousands-separator\"]",
    "body": [
      "\"function monetary-thousands-separator()$0\""
    ],
    "description": "\"character used to separate the thousands digit groupings in a monetary currency value according to the current locale\""
  },
  "function-national-of": {
    "prefix": "[\"function national-of\"]",
    "body": [
      "\"function national-of(${1:alphanumeric-string},${2:replacement-char})$0\""
    ],
    "description": "\"convert alphanumeric-string to the national coded character set representation\""
  },
  "function-numeric-thousands-separator": {
    "prefix": "[\"function numeric-thousands-separator\"]",
    "body": [
      "\"function numeric-thousands-separator()$0\""
    ],
    "description": "\"character used to separate the thousands digit groupings in a numeric value according to the current locale\""
  },
  "function-numval": {
    "prefix": "[\"function numval\"]",
    "body": [
      "\"function numval(${1:string})$0\""
    ],
    "description": "\"corresponding numeric value for string\""
  },
  "function-numval-c": {
    "prefix": "[\"function numval-c\"]",
    "body": [
      "\"function numval-c(${1:string},${2:currency-symbol}${3:,ANYCASE})$0\""
    ],
    "description": "\"corresponding numeric value for string, case-sensitive if ANYCASE not given\""
  },
  "function-numval-f": {
    "prefix": "[\"function numval-f\"]",
    "body": [
      "\"function numval-f(${1:string})$0\""
    ],
    "description": "\"corresponding numeric value for floating-point-string\""
  },
  "function-ord": {
    "prefix": "[\"function ord\"]",
    "body": [
      "\"function ord(${1:char},${2:...})$0\""
    ],
    "description": "\"ordinal position in the program character set corresponding to char\""
  },
  "function-ord-max": {
    "prefix": "[\"function ord-max\"]",
    "body": [
      "\"function ord-max(${1:char},${2:...})$0\""
    ],
    "description": "\"max. ordinal position in the program character set corresponding to list of chars\""
  },
  "function-ord-min": {
    "prefix": "[\"function ord-min\"]",
    "body": [
      "\"function ord-min(${1:char},${2:...})$0\""
    ],
    "description": "\"min. ordinal position in the program character set corresponding to list of chars\""
  },
  "function-pi": {
    "prefix": "[\"function pi\"]",
    "body": [
      "\"function pi()$0\""
    ],
    "description": "\"pi\""
  },
  "function-present-value": {
    "prefix": "[\"function present-value\"]",
    "body": [
      "\"function present-value(${1:discount-rate},${2:amount},${3:...})$0\""
    ],
    "description": "\"approximation of the present value of a series of future period-end amount\""
  },
  "function-random": {
    "prefix": "[\"function random\"]",
    "body": [
      "\"function random(${1:seed})$0\""
    ],
    "description": "\"pseudo-random number 0> <1 from a rectangular distribution with optional seed\""
  },
  "function-range": {
    "prefix": "[\"function range\"]",
    "body": [
      "\"function range(${1:argument},${2:...})$0\""
    ],
    "description": "\"value of the maximum argument minus the value of the minimum argument\""
  },
  "function-rem": {
    "prefix": "[\"function rem\"]",
    "body": [
      "\"function rem(${1:number},${2:divisor})$0\""
    ],
    "description": "\"remainder of number divided by divisor\""
  },
  "function-reverse": {
    "prefix": "[\"function reverse\"]",
    "body": [
      "\"function reverse(${1:string})$0\""
    ],
    "description": "\"reverse representation with same length of string\""
  },
  "function-seconds-from-formatted-time": {
    "prefix": "[\"function seconds-from-formatted-time\"]",
    "body": [
      "\"function seconds-from-formatted-time(${1:format},${2:time})$0\""
    ],
    "description": "\"decode time according to format (a time format or a combined date and time format)\""
  },
  "function-seconds-past-midnight": {
    "prefix": "[\"function seconds-past-midnight\"]",
    "body": [
      "\"function seconds-past-midnight()$0\""
    ],
    "description": "\"current time of day expressed as the total number of elapsed seconds since midnight\""
  },
  "function-sign": {
    "prefix": "[\"function sign\"]",
    "body": [
      "\"function sign(${1:number})$0\""
    ],
    "description": "\"sign representation of number as -1, 0, 1\""
  },
  "function-sin": {
    "prefix": "[\"function sin\"]",
    "body": [
      "\"function sin(${1:angle})$0\""
    ],
    "description": "\"trigonometric sine of the specified angle\""
  },
  "function-sqrt": {
    "prefix": "[\"function sqrt\"]",
    "body": [
      "\"function sqrt(${1:number})$0\""
    ],
    "description": "\"aproximation of the square root of number\""
  },
  "function-tan": {
    "prefix": "[\"function tan\"]",
    "body": [
      "\"function tan(${1:angle})$0\""
    ],
    "description": "\"trigonometric tangent of the specified angle\""
  },
  "function-upper-case": {
    "prefix": "[\"function upper-case\"]",
    "body": [
      "\"function upper-case(${1:string})$0\""
    ],
    "description": "\"character string that contains string with any lowercase letters replaced by their corresponding uppercase letters\""
  },
  "function-variance": {
    "prefix": "[\"function variance\"]",
    "body": [
      "\"function variance(${1:number},${2:...})$0\""
    ],
    "description": "\"statistical variance of the specified list of number argument\""
  },
  "function-year-to-yyyy": {
    "prefix": "[\"function year-to-yyyy\"]",
    "body": [
      "\"function year-to-yyyy(${1:yy},${2:[yy-cutoff, default: 50},${3:yy-execution-time, default: now})$0\""
    ],
    "description": "\"convert yy to yyyy with optional yy-cutoff to delineate centuries\""
  },
  "identification division": {
    "prefix": "[\"id\",\"identification division\"]",
    "body": [
      "\"identification division.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "if": {
    "prefix": "[\"if\",\"ie\"]",
    "body": [
      "\"if ${1:condition}\"",
      "\"   $0\"",
      "\"end-if\""
    ],
    "description": "null"
  },
  "if else": {
    "prefix": "[\"if\",\"iee\"]",
    "body": [
      "\"if ${1:condition}\"",
      "\"   $0\"",
      "\"else\"",
      "\"   \"",
      "\"end-if\""
    ],
    "description": "null"
  },
  "inspect converting": {
    "prefix": "\"inspect\"",
    "body": [
      "\"inspect $1 converting '${2:ABCDEFGHIJKLMNOPQRSTUVWXYZ}' to '${3:abcdefghijklmnopqrstuvwxyz}'\""
    ],
    "description": "\"inspect converting\""
  },
  "inspect replacing": {
    "prefix": "\"inspect\"",
    "body": [
      "\"inspect $1 replacing all ${2|spaces,zero|} by '${3}'\""
    ],
    "description": "\"inspect replacing\""
  },
  "inspect tallying": {
    "prefix": "\"inspect\"",
    "body": [
      "\"move 0 to ${2:counter}\"",
      "\"inspect ${1:source} tallying ${2:counter} for ${3|all spaces,all $4,characters|}\""
    ],
    "description": "\"Inspect a tallying counter for ...\""
  },
  "linkage section.": {
    "prefix": "[\"ls\",\"lks\",\"linkage section\"]",
    "body": [
      "\"linkage section.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "local-storage section": {
    "prefix": "[\"ls\",\"local-storage\"]",
    "body": [
      "\"local-storage section.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "main method-id": {
    "prefix": "\"main\"",
    "body": [
      "\"*>> <summary>method main</summary>\"",
      "\"method-id main public static.\"",
      "\"procedure division using\"",
      "\"           by value args as string occurs any.\"",
      "\"    $0\"",
      "\"end method.\"",
      "\"\""
    ],
    "description": "\"method-id (main)\""
  },
  "method-id": {
    "prefix": "[\"method-id\",\"mi\"]",
    "body": [
      "\"*>> <summary>method $1</summary>\"",
      "\"method-id $1.\"",
      "\"procedure division.\"",
      "\"    $0\"",
      "\"end method.\"",
      "\"\""
    ],
    "description": "\"method-id\""
  },
  "multiply": {
    "prefix": "[\"multiply\",\"mg\"]",
    "body": [
      "\"multiply ${1:a} by ${2:b} giving ${3:c}\""
    ],
    "description": "\"Multiply a by y giving z\""
  },
  "perform": {
    "prefix": "[\"perform\",\"pt\"]",
    "body": [
      "\"perform ${1:paragraph-name} ${2:value-1} times\""
    ],
    "description": "\"perform paragraph x times\""
  },
  "perform varying": {
    "prefix": "[\"perform\",\"pv\"]",
    "body": [
      "\"perform ${1:paragraph-name} varying ${2:field-1}\"",
      "\" from ${3:value-1} by ${4:value-2}\"",
      "\" until ${5:condition}\"",
      "\"$0\""
    ],
    "description": "\"inline perform varying\""
  },
  "perform-end-perform": {
    "prefix": "[\"perform\",\"pe\"]",
    "body": [
      "\"perform ${1}\"",
      "\"\\t${2}\"",
      "\"end-perform\"",
      "\"${0}\""
    ],
    "description": "\"perform .. end-perform\""
  },
  "procedure division": {
    "prefix": "[\"pd\",\"procedure division\"]",
    "body": [
      "\"procedure division.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "program-id": {
    "prefix": "[\"pi\",\"program-id. prg.\"]",
    "body": [
      "\"program-id. ${1:${TM_FILENAME/(.*)\\\\..+$/$1/}}.\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "property": {
    "prefix": "\"property\"",
    "body": [
      "\"01 ${2:_prop} ${3:binary-long} private.\"",
      "\"method-id. get property #${1:Prop}.\"",
      "\"procedure division returning ret as ${3:binary-long}.\"",
      "\"    set ret to ${2:_prop}\"",
      "\"end method.\"",
      "\"method-id. set property #${1:Prop}.\"",
      "\"procedure division using by value val as ${3:binary-long}.\"",
      "\"    set ${2:_prop} to 0\"",
      "\"end method.\"",
      "\"\""
    ],
    "description": "\"set/get property\""
  },
  "ruler": {
    "prefix": "\"ruler\"",
    "body": [
      "\"|...+.*..1....+....2....+....3....+....4....+....5....+....6....+....7..\""
    ],
    "description": "null"
  },
  "select-to-section": {
    "prefix": "\"perform\"",
    "body": [
      "\"$1 section.\"",
      "\"   $TM_SELECTED_TEXT\"",
      "\"$1-end section.\"",
      "\"   exit section.\""
    ],
    "description": "\"select-tosection\""
  },
  "sourceformat": {
    "prefix": "\"$set\"",
    "body": [
      "\"\\\\$set sourceformat\\\"${2|free,variable,fixed|}\\\"\"",
      "\"$0\""
    ],
    "description": "null"
  },
  "string": {
    "prefix": "\"string\"",
    "body": [
      "\"string ${1:item1} delimited by size\"",
      "\"       ${2:item2} delimited by size\"",
      "\"       into ${3:result}\"",
      "\"end-string\"",
      "\"$0\""
    ],
    "description": "\"string delimited by size\""
  },
  "subtract": {
    "prefix": "\"subtract\"",
    "body": [
      "\"subtract ${1:a} from ${2:b} giving ${3:c}\""
    ],
    "description": "\"subtract a from b giving c\""
  },
  "try": {
    "prefix": "\"try\"",
    "body": [
      "\"try\"",
      "\"$2\"",
      "\"catch ${1:Exception}\"",
      "\"$0\"",
      "\"end-try\""
    ],
    "description": "\"try catch\""
  },
  "valuetype": {
    "prefix": "[\"vi\",\"valuetype-id\"]",
    "body": [
      "\"valuetype-id $1 ${2:public}.\"",
      "\"01 item string ${2:public}.\"",
      "\"\"",
      "\"method-id new ${2:public}.\"",
      "\"procedure division.\"",
      "\"   $0\"",
      "\"end method.\"",
      "\"\"",
      "\"end valuetype.\""
    ],
    "description": "\"valuetype\""
  },
  "working-storage section": {
    "prefix": "[\"ws\",\"working-storage\"]",
    "body": [
      "\"working-storage section.\"",
      "\"$0\""
    ],
    "description": "null"
  }
}