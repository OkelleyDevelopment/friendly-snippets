{
  "Execute": {
    "prefix": "\"execute\"",
    "body": [
      "\"{%- $1 -%}\""
    ],
    "description": "\"Tag markup: {%- -%}\""
  },
  "Filter append": {
    "prefix": "\"append\"",
    "body": [
      "\"| append: '${string}' }}\""
    ],
    "description": "\"String filter: append\""
  },
  "Filter capitalize": {
    "prefix": "\"capitalize\"",
    "body": [
      "\"| capitalize }}\""
    ],
    "description": "\"String filter: capitalize\""
  },
  "Filter ceil": {
    "prefix": "\"ceil\"",
    "body": [
      "\"| ceil\""
    ],
    "description": "\"Math filter: ceil\""
  },
  "Filter divided by": {
    "prefix": "\"divided_by\"",
    "body": [
      "\"| divided_by: ${divided_by:2}\""
    ],
    "description": "\"Math filter: divided by\""
  },
  "Filter downcase": {
    "prefix": "\"downcase\"",
    "body": [
      "\"| downcase }}\""
    ],
    "description": "\"String filter: downcase\""
  },
  "Filter escape": {
    "prefix": "\"escape\"",
    "body": [
      "\"| escape }}\""
    ],
    "description": "\"String filter: escape\""
  },
  "Filter first": {
    "prefix": "\"first\"",
    "body": [
      "\"| first\""
    ],
    "description": "\"Array filter: first\""
  },
  "Filter floor": {
    "prefix": "\"floor\"",
    "body": [
      "\"| floor\""
    ],
    "description": "\"Math filter: floor\""
  },
  "Filter join": {
    "prefix": "\"join\"",
    "body": [
      "\"| join: '${seperator:, }}'\""
    ],
    "description": "\"Array filter: join\""
  },
  "Filter jsonify": {
    "prefix": "\"json\"",
    "body": [
      "\"| jsonify }}'\""
    ],
    "description": "\"Array filter: jsonify\""
  },
  "Filter last": {
    "prefix": "\"last\"",
    "body": [
      "\"| last\""
    ],
    "description": "\"Array filter: last\""
  },
  "Filter lstrip": {
    "prefix": "\"lstrip\"",
    "body": [
      "\"| lstrip }}\""
    ],
    "description": "\"String filter: lstrip\""
  },
  "Filter map": {
    "prefix": "\"map\"",
    "body": [
      "\"| map: '${key}'\""
    ],
    "description": "\"Array filter: map\""
  },
  "Filter markdownify": {
    "prefix": "\"markdown\"",
    "body": [
      "\"| markdownify }}\""
    ],
    "description": "\"String filter: markdownify\""
  },
  "Filter minus": {
    "prefix": "\"minus\"",
    "body": [
      "\"| minus: ${minus:1}\""
    ],
    "description": "\"Math filter: minus\""
  },
  "Filter modulo": {
    "prefix": "\"modulo\"",
    "body": [
      "\"| modulo: ${modulo:2}\""
    ],
    "description": "\"Math filter: modulo\""
  },
  "Filter plus": {
    "prefix": "\"plus\"",
    "body": [
      "\"| plus: ${plus:1}\""
    ],
    "description": "\"Math filter: plus\""
  },
  "Filter prepend": {
    "prefix": "\"prepend\"",
    "body": [
      "\"| prepend: '${string}' }}\""
    ],
    "description": "\"String filter: prepend\""
  },
  "Filter remove": {
    "prefix": "\"remove\"",
    "body": [
      "\"| remove: '${string}' }}\""
    ],
    "description": "\"String filter: remove\""
  },
  "Filter remove first": {
    "prefix": "\"remove_first\"",
    "body": [
      "\"| remove_first: '${string}' }}\""
    ],
    "description": "\"String filter: remove first\""
  },
  "Filter replace": {
    "prefix": "\"replace\"",
    "body": [
      "\"| replace: '${target}', '${replace}' }}\""
    ],
    "description": "\"String filter: replace\""
  },
  "Filter replace first": {
    "prefix": "\"replace_first\"",
    "body": [
      "\"| replace_first: '${target}', '${replace}' }}\""
    ],
    "description": "\"String filter: replace first\""
  },
  "Filter round": {
    "prefix": "\"round\"",
    "body": [
      "\"| round: ${round:0}\""
    ],
    "description": "\"Math filter: round\""
  },
  "Filter rstrip": {
    "prefix": "\"rstrip\"",
    "body": [
      "\"| rstrip }}\""
    ],
    "description": "\"String filter: rstrip\""
  },
  "Filter size": {
    "prefix": "\"size\"",
    "body": [
      "\"| size\""
    ],
    "description": "\"Array filter: size\""
  },
  "Filter slice": {
    "prefix": "\"slice\"",
    "body": [
      "\"| slice: ${from:0}, ${to:5} }}\""
    ],
    "description": "\"String filter: slice\""
  },
  "Filter slice single character": {
    "prefix": "\"slice_single\"",
    "body": [
      "\"| slice: ${at} }}\""
    ],
    "description": "\"String filter: slice with single parameter\""
  },
  "Filter sort": {
    "prefix": "\"sort\"",
    "body": [
      "\"| sort\""
    ],
    "description": "\"Array filter: sort\""
  },
  "Filter split": {
    "prefix": "\"split\"",
    "body": [
      "\"| split: '${splitter:,}' }}\""
    ],
    "description": "\"String filter: split\""
  },
  "Filter strip": {
    "prefix": "\"strip\"",
    "body": [
      "\"| strip }}\""
    ],
    "description": "\"String filter: strip\""
  },
  "Filter strip html": {
    "prefix": "\"strip_html\"",
    "body": [
      "\"| strip_html }}\""
    ],
    "description": "\"String filter: strip html\""
  },
  "Filter strip newlines": {
    "prefix": "\"strip_newlines\"",
    "body": [
      "\"| strip_newlines }}\""
    ],
    "description": "\"String filter: strip newlines\""
  },
  "Filter times": {
    "prefix": "\"times\"",
    "body": [
      "\"| times: ${times:1}\""
    ],
    "description": "\"Math filter: times\""
  },
  "Filter truncate": {
    "prefix": "\"truncate\"",
    "body": [
      "\"| truncate: ${length:20}, '${ellipsis:...}' }}\""
    ],
    "description": "\"String filter: truncate\""
  },
  "Filter truncatewords": {
    "prefix": "\"truncatewords\"",
    "body": [
      "\"| truncatewords: ${length:5}, '${ellipsis:...}' }}\""
    ],
    "description": "\"String filter: truncatewords\""
  },
  "Filter uniq": {
    "prefix": "\"uniq\"",
    "body": [
      "\"| uniq\""
    ],
    "description": "\"Array filter: uniq\""
  },
  "Filter upcase": {
    "prefix": "\"upcase\"",
    "body": [
      "\"| upcase }}\""
    ],
    "description": "\"String filter: upcase }}\""
  },
  "Filter uri escape": {
    "prefix": "\"uri_escape\"",
    "body": [
      "\"| uri_escape }}\""
    ],
    "description": "\"String filter: uri escape\""
  },
  "Filter url encode": {
    "prefix": "\"url_encode\"",
    "body": [
      "\"| url_encode }}\""
    ],
    "description": "\"String filter: url encode\""
  },
  "Filter xml escape": {
    "prefix": "\"xml_escape\"",
    "body": [
      "\"| xml_escape }}\""
    ],
    "description": "\"String filter: xml escape\""
  },
  "Front Matter": {
    "prefix": "\"fm\"",
    "body": [
      "\"---\"",
      "\"layout: ${layout:default}\"",
      "\"title: ${title}\"",
      "\"categories: ${category}\"",
      "\"permalink: ${path}\"",
      "\"tags: ${tag}\"",
      "\"excerpt: ${description}\"",
      "\"---\""
    ],
    "description": "\"Add front matter\""
  },
  "Show": {
    "prefix": "\"show\"",
    "body": [
      "\"{{ $1 }}\""
    ],
    "description": "\"Output markup: {{ }}\""
  },
  "Site Vairable Date": {
    "prefix": "\"date\"",
    "body": [
      "\"{{ site.date | date: '${format: %b %d, %Y}' }}\""
    ],
    "description": "\"Tag: site.date\""
  },
  "Tag Option limit": {
    "prefix": "\"limit\"",
    "body": [
      "\"limit: ${limit:5}\""
    ],
    "description": "\"For loops option\""
  },
  "Tag Option offset": {
    "prefix": "\"offset\"",
    "body": [
      "\"offset: ${offset:0}\""
    ],
    "description": "\"For loops option\""
  },
  "Tag Option reversed": {
    "prefix": "\"reversed\"",
    "body": [
      "\"reversed\""
    ],
    "description": "\"For loops option\""
  },
  "Tag Post URL": {
    "prefix": "\"posturl\"",
    "body": [
      "\"{%- post_url ${url:} -%}\""
    ],
    "description": "\"Tag: post_url\""
  },
  "Tag assign": {
    "prefix": "\"assign\"",
    "body": [
      "\"{%- assign ${variable} = ${value} -%}\""
    ],
    "description": "\"Variable tag: assign\""
  },
  "Tag break": {
    "prefix": "\"break\"",
    "body": [
      "\"{%- break -%}\""
    ],
    "description": "\"Iteration tag: break\""
  },
  "Tag capture": {
    "prefix": "\"capture\"",
    "body": [
      "\"{%- capture ${variable} -%}${code:}{%- endcapture -%}\""
    ],
    "description": "\"Variable tag: capture\""
  },
  "Tag case": {
    "prefix": "\"case\"",
    "body": [
      "\"{%- case ${variable} -%}\"",
      "\"\\t{%- when ${condition} -%}\"",
      "\"\\t\\t${code1:}\"",
      "\"\\t{%- else -%}\"",
      "\"\\t\\t${code2:}\"",
      "\"{%- endcase -%}\""
    ],
    "description": "\"Control flow tag: case\""
  },
  "Tag collection directory": {
    "prefix": "\"cdirp\"",
    "body": [
      "\"{{ site.${my_collection}.directory }}\""
    ],
    "description": "\"The full path to the collection's source direcotry\""
  },
  "Tag collection relative path": {
    "prefix": "\"crelp\"",
    "body": [
      "\"{{ site.collections.${my_collection}.relative_path }}\""
    ],
    "description": "\"The path to the document's source file realtive to the site source\""
  },
  "Tag comment": {
    "prefix": "\"comment\"",
    "body": [
      "\"{%- comment -%}${description:}{%- endcomment -%}\""
    ],
    "description": "\"Control flow tag: case\""
  },
  "Tag context variable": {
    "prefix": "\"convar\"",
    "body": [
      "\"{{ ${variable:} }}\""
    ],
    "description": "\"Context Variable\""
  },
  "Tag continue": {
    "prefix": "\"continue\"",
    "body": [
      "\"{%- continue -%}\""
    ],
    "description": "\"Iteration tag: continue\""
  },
  "Tag cycle": {
    "prefix": "\"cycle\"",
    "body": [
      "\"{%- cycle '${0:odd}', '${1:even}' -%}\""
    ],
    "description": "\"Iteration tag: cycle\""
  },
  "Tag decrement": {
    "prefix": "\"decrement\"",
    "body": [
      "\"{%- decrement ${variable} -%}\""
    ],
    "description": "\"Variable tag: decrement\""
  },
  "Tag else": {
    "prefix": "\"else\"",
    "body": [
      "\"{%- else -%}\""
    ],
    "description": "\"Control flow tag: else\""
  },
  "Tag elsif": {
    "prefix": "\"elsif\"",
    "body": [
      "\"{%- elsif ${condition} -%}\""
    ],
    "description": "\"Control flow tag: elsif\""
  },
  "Tag for": {
    "prefix": "\"for\"",
    "body": [
      "\"{%- for ${item} in ${collection} -%}\"",
      "\"\\t${code:}\"",
      "\"{%- endfor -%}\""
    ],
    "description": "\"Iteration tag: for\""
  },
  "Tag gist": {
    "prefix": "\"gist\"",
    "body": [
      "\"{%- gist ${gist:user/gist-id} -%}\""
    ],
    "description": "\"Add a gist code block\""
  },
  "Tag highlight": {
    "prefix": "\"highlight\"",
    "body": [
      "\"{%- highlight ${lang:javascript} -%}\"",
      "\"\\t\\t${code:}\"",
      "\"{%- endhighlight -%}\""
    ],
    "description": "\"Syntax tag: highlight\""
  },
  "Tag if": {
    "prefix": "\"if\"",
    "body": [
      "\"{%- if ${condition} -%}\"",
      "\"\\t${code:}\"",
      "\"{%- endif -%}\""
    ],
    "description": "\"Control flow tag: if\""
  },
  "Tag if else": {
    "prefix": "\"ifelse\"",
    "body": [
      "\"{%- if ${condition} -%}\"",
      "\"\\t${code1:}\"",
      "\"{%- else -%}\"",
      "\"\\t${code2:}\"",
      "\"{%- endif -%}\""
    ],
    "description": "\"Control flow tag: if else\""
  },
  "Tag include": {
    "prefix": "\"include\"",
    "body": [
      "\"{%- include ${snippet} -%}\""
    ],
    "description": "\"Tag: include\""
  },
  "Tag include relative": {
    "prefix": "\"increl\"",
    "body": [
      "\"{%- include_relative '${file:}' -%}\""
    ],
    "description": "\"Tag: include relative\""
  },
  "Tag increment": {
    "prefix": "\"increment\"",
    "body": [
      "\"{%- increment ${variable} -%}\""
    ],
    "description": "\"Variable tag: increment\""
  },
  "Tag paginate next or previous page": {
    "prefix": "\"paginate\"",
    "body": [
      "\"{{ paginator.${next:previous}_page }}\""
    ],
    "description": "\"Tag: paginate next or previous page\""
  },
  "Tag raw": {
    "prefix": "\"raw\"",
    "body": [
      "\"{%- raw -%}${code:}{%- endraw -%}\""
    ],
    "description": "\"Tag: raw\""
  },
  "Tag unless": {
    "prefix": "\"unless\"",
    "body": [
      "\"{%- unless ${condition} -%}\"",
      "\"\\t${code:}\"",
      "\"{%- endunless -%}\""
    ],
    "description": "\"Control flow tag: unless\""
  },
  "Tag when": {
    "prefix": "\"when\"",
    "body": [
      "\"{%- when ${condition} -%}\"",
      "\"${code:}\""
    ],
    "description": "\"Control flow tag: when\""
  }
}